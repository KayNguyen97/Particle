import{a as _,b as m,c as v}from"./chunk-SOQIEFZQ.js";import"./chunk-H4WTNLNN.js";import{a as b}from"./chunk-3IMLJ5JL.js";import{a as H,b as O}from"./chunk-6MF5IKP5.js";import"./chunk-D4LPLMJ4.js";import"./chunk-PGY6IZUS.js";import"./chunk-AXKCDQTS.js";import"./chunk-JWFSXEUV.js";import"./chunk-PD2BTUUF.js";import"./chunk-YCMOAOGN.js";import"./chunk-A75OUJFC.js";import"./chunk-YG4ZGSDO.js";import"./chunk-OCHHKHZZ.js";import{a as M}from"./chunk-JQQNTNIX.js";import"./chunk-ZKDHZDUE.js";import"./chunk-4UESFVD2.js";import"./chunk-D7KW4FFX.js";import"./chunk-RAXGEVRQ.js";import"./chunk-S4N75E3H.js";import"./chunk-2BSLA752.js";import"./chunk-FLCN6MAI.js";import"./chunk-YMZEQGAL.js";import"./chunk-7E3KY4EN.js";import"./chunk-JIRWXBHS.js";import{a as R}from"./chunk-3TVEFIPW.js";import"./chunk-IMRS4RGO.js";import"./chunk-XKG5DY6K.js";import{a as f}from"./chunk-6PGLMYAE.js";import"./chunk-RMQJRDTF.js";import"./chunk-2YLR7R2N.js";import"./chunk-MVLY6WUP.js";import"./chunk-ZEAKIEIQ.js";import"./chunk-5KSDRGLW.js";import"./chunk-DQTCC3FF.js";import"./chunk-O5LVHMPV.js";import{F as y,Pa as P}from"./chunk-CVJKAN5R.js";import"./chunk-A5Y2KVNP.js";import"./chunk-GXQ645QR.js";import"./chunk-DQ2NYVYI.js";import"./chunk-C2H3SRET.js";import"./chunk-V4YVDLI4.js";import"./chunk-HCW4K7TR.js";import"./chunk-TW6D7CWA.js";import"./chunk-3T5D6KAV.js";import"./chunk-MAWXDEJZ.js";import"./chunk-Z37GURZ6.js";import"./chunk-IYYFWVWL.js";import"./chunk-K2CHCG7Q.js";import"./chunk-3FBBK33H.js";import"./chunk-RYNAOZ73.js";import"./chunk-Q34CQJXG.js";import"./chunk-GKHVFCKF.js";import{f as w,m as S,o as E}from"./chunk-6V2G2Z5W.js";S();E();var D=w(_());P();var I=w(b()),o=w(R());var T=D.default.HardwareWebSdk,x=class extends v{async signTransaction(p,t,i){return new Promise((e,r)=>{(async()=>{let{onekeyInfo:n,hdPathMap:s}=p,c;try{c=await this.initOneKey({onekeyInfo:n,onUiCancel(){r(new Error(f))}})}catch(l){return r(this.handleErrors(l))}t=M(t);let d=H(t),h=s[y],{success:u,payload:a}=await T.evmSignTransaction(n==null?void 0:n.connectId,c,{path:h,transaction:{...d.toJSON(),to:(0,o.bufferToHex)(d.to).toString(),chainId:t.chainId}});if(m.closeModal(),u){let l=O(d,a);return e(i?l:{rawTxResult:l})}return r(this.handleErrors(a))})()})}async signPersonalMessage(p,t={}){return new Promise((i,e)=>{(async()=>{let{onekeyInfo:r,hdPathMap:n}=p,s;try{s=await this.initOneKey({onekeyInfo:r,onUiCancel(){e(new Error(f))}})}catch(a){return e(this.handleErrors(a))}let{data:c=""}=t||{},d=n[y],{success:h,payload:u}=await T.evmSignMessage(r==null?void 0:r.connectId,s,{path:d,messageHex:(0,o.stripHexPrefix)(c)});if(m.closeModal(),h){let{signature:a=""}=u||{};return t.result=(0,o.addHexPrefix)(a),i()}return e(this.handleErrors(u))})()})}async signTypedData(p,t={}){return new Promise((i,e)=>{(async()=>{let{onekeyInfo:r,hdPathMap:n}=p,s;try{s=await this.initOneKey({onekeyInfo:r,onUiCancel(){e(new Error(f))}})}catch(K){return e(this.handleErrors(K))}let c=n[y];if(!(t.version==="V4"))return t.uiSignErrorMessage="OneKey: Only version 4 of typed data signing is supported",m.closeModal(),i();let h=JSON.parse(t.data),{domain_separator_hash:u,message_hash:a}=(0,I.default)(h,!0),{success:l,payload:g}=await T.evmSignTypedData(r==null?void 0:r.connectId,s,{path:c,data:h,metamask_v4_compat:!0,domainHash:u,messageHash:a});return m.closeModal(),l?(t.rawSig=(0,o.addHexPrefix)(g==null?void 0:g.signature),i()):e(this.handleErrors(g))})()})}},L=new x;export{L as default};

window.inOKXExtension = true;
window.ASSETS_BUILD_TYPE = "publish";

//# sourceMappingURL=ethAdapter-M2G5E6RJ.js.map
