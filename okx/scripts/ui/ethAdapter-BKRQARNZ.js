import{a as I,b as v}from"./chunk-4THBRLBC.js";import{a as H}from"./chunk-3IMLJ5JL.js";import{a as M}from"./chunk-VDDCDY6V.js";import{a as S,b as _}from"./chunk-6MF5IKP5.js";import"./chunk-D4LPLMJ4.js";import"./chunk-PGY6IZUS.js";import"./chunk-AXKCDQTS.js";import"./chunk-JWFSXEUV.js";import"./chunk-PD2BTUUF.js";import"./chunk-YCMOAOGN.js";import"./chunk-YG4ZGSDO.js";import"./chunk-OCHHKHZZ.js";import{a as y}from"./chunk-JQQNTNIX.js";import{d as w,f as O}from"./chunk-S4N75E3H.js";import"./chunk-YMZEQGAL.js";import"./chunk-7E3KY4EN.js";import"./chunk-JIRWXBHS.js";import{a as E}from"./chunk-3TVEFIPW.js";import"./chunk-IMRS4RGO.js";import{a as x}from"./chunk-6PGLMYAE.js";import"./chunk-RMQJRDTF.js";import"./chunk-MVLY6WUP.js";import"./chunk-ZEAKIEIQ.js";import"./chunk-5KSDRGLW.js";import"./chunk-DQTCC3FF.js";import"./chunk-O5LVHMPV.js";import{C as P,F as p,Pa as D,v as T}from"./chunk-CVJKAN5R.js";import"./chunk-A5Y2KVNP.js";import{H as g}from"./chunk-GXQ645QR.js";import"./chunk-DQ2NYVYI.js";import"./chunk-C2H3SRET.js";import"./chunk-V4YVDLI4.js";import"./chunk-HCW4K7TR.js";import"./chunk-TW6D7CWA.js";import"./chunk-3T5D6KAV.js";import"./chunk-MAWXDEJZ.js";import"./chunk-Z37GURZ6.js";import"./chunk-IYYFWVWL.js";import"./chunk-RYNAOZ73.js";import"./chunk-Q34CQJXG.js";import"./chunk-GKHVFCKF.js";import{f as h,m as l,o as d}from"./chunk-6V2G2Z5W.js";l();d();var e=h(E());var u=h(I());D();O();var C=h(H());P();var m=class extends v{async signTransaction(o,t,a){let c=o.hdPathMap[p];t=y(t);let r=S(t),{payload:n,success:s}=await u.default.ethereumSignTransaction({path:c,transaction:{...r.toJSON(),to:(0,e.bufferToHex)(r.to).toString(),chainId:t.chainId}});if(s){globalThis.platform.focusCurrentWindow();let i=_(r,{...n});return M(i,t.from)?a?i:{rawTxResult:i}:this.throwInvalidPassPhraseTip()}return this.throwTxCancelTip()}async signPersonalMessage(o,t={}){let a=o.hdPathMap[p],{data:c=""}=t||{},{success:r,payload:n}=await u.default.ethereumSignMessage({path:a,message:(0,e.stripHexPrefix)(c),hex:!0});if(r){globalThis.platform.focusCurrentWindow();let{signature:s=""}=n||{};return t.result=(0,e.addHexPrefix)(s),null}return this.throwTxCancelTip()}async signTypedData(o,t={}){let a=o.hdPathMap[p];if(!(t.version==="V4"))return t.uiSignErrorMessage="Trezor: Only version 4 of typed data signing is supported",null;let r=JSON.parse(t.data),{domain_separator_hash:n,message_hash:s}=(0,C.default)(r,!0),{success:i,payload:f}=await u.default.ethereumSignTypedData({path:a,data:r,metamask_v4_compat:!0,domain_separator_hash:n,message_hash:s});return i?(w().focusLastOkPopupWithCache(),t.rawSig=f==null?void 0:f.signature,null):this.throwTxCancelTip()}throwInvalidPassPhraseTip(){throw g.error(T("wallet_extension_transaction_toast_trezor")),new Error(x)}},j=new m;export{j as default};

window.inOKXExtension = true;
window.ASSETS_BUILD_TYPE = "publish";

//# sourceMappingURL=ethAdapter-BKRQARNZ.js.map
